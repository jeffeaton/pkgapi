% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkgapi.R
\name{pkgapi}
\alias{pkgapi}
\title{A \code{pkgapi} object}
\description{
A \code{pkgapi} object.  This extends (via
  inheritance) a plumber object, and so only changes to the
  plumber API are documented here.
}
\section{Super classes}{
\code{\link[plumber:plumber]{plumber::plumber}} -> \code{pkgapi}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{pkgapi$new()}}
\item \href{#method-handle}{\code{pkgapi$handle()}}
\item \href{#method-request}{\code{pkgapi$request()}}
\item \href{#method-clone}{\code{pkgapi$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="hookable" data-id="registerHooks">}\href{../../plumber/html/hookable.html#method-registerHooks}{\code{plumber::hookable$registerHooks()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="addAssets">}\href{../../plumber/html/plumber.html#method-addAssets}{\code{plumber::plumber$addAssets()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="addEndpoint">}\href{../../plumber/html/plumber.html#method-addEndpoint}{\code{plumber::plumber$addEndpoint()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="addFilter">}\href{../../plumber/html/plumber.html#method-addFilter}{\code{plumber::plumber$addFilter()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="addGlobalProcessor">}\href{../../plumber/html/plumber.html#method-addGlobalProcessor}{\code{plumber::plumber$addGlobalProcessor()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="call">}\href{../../plumber/html/plumber.html#method-call}{\code{plumber::plumber$call()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="filter">}\href{../../plumber/html/plumber.html#method-filter}{\code{plumber::plumber$filter()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="mount">}\href{../../plumber/html/plumber.html#method-mount}{\code{plumber::plumber$mount()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="onHeaders">}\href{../../plumber/html/plumber.html#method-onHeaders}{\code{plumber::plumber$onHeaders()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="onWSOpen">}\href{../../plumber/html/plumber.html#method-onWSOpen}{\code{plumber::plumber$onWSOpen()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="print">}\href{../../plumber/html/plumber.html#method-print}{\code{plumber::plumber$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="registerHook">}\href{../../plumber/html/plumber.html#method-registerHook}{\code{plumber::plumber$registerHook()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="route">}\href{../../plumber/html/plumber.html#method-route}{\code{plumber::plumber$route()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="run">}\href{../../plumber/html/plumber.html#method-run}{\code{plumber::plumber$run()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="serve">}\href{../../plumber/html/plumber.html#method-serve}{\code{plumber::plumber$serve()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="set404Handler">}\href{../../plumber/html/plumber.html#method-set404Handler}{\code{plumber::plumber$set404Handler()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="setErrorHandler">}\href{../../plumber/html/plumber.html#method-setErrorHandler}{\code{plumber::plumber$setErrorHandler()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="setSerializer">}\href{../../plumber/html/plumber.html#method-setSerializer}{\code{plumber::plumber$setSerializer()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="plumber" data-topic="plumber" data-id="swaggerFile">}\href{../../plumber/html/plumber.html#method-swaggerFile}{\code{plumber::plumber$swaggerFile()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Create a pkgapi object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pkgapi$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to \code{\link{plumber}}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-handle"></a>}}
\subsection{Method \code{handle()}}{
Handle an endpoint
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pkgapi$handle(endpoint)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{endpoint}}{A \code{\link{pkgapi_endpoint}} object representing
an endpoint.  Unlike plumber, an R function will \emph{not} work.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-request"></a>}}
\subsection{Method \code{request()}}{
Send a request to plumber for debugging

Sends a request to plumber so that the API can be easily
tested without running the whole API. The interface here will
probably change, and may end up using the interface of \code{httr}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pkgapi$request(method, path, query = NULL, body = NULL, content_type = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{method}}{Name of HTTP method to use (e.g., \code{GET})}

\item{\code{path}}{Path to send the request to}

\item{\code{query}}{Optional query parameters as a named list or
character vector.}

\item{\code{body}}{Optional body (only valid with \code{PUT}, \code{POST},
etc).}

\item{\code{content_type}}{Optional content type (mime) which can be
provided alongside \code{body}.  If not provided it is set to
\code{application/octet-stream} if \code{body} is raw, or
\code{application/json} otherwise.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{pkgapi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
